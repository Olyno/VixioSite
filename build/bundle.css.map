{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Navbar.svelte",
    "../../Sidebar.svelte",
    "../../TopArrow.svelte",
    "../../Card.svelte",
    "../../Footer.svelte"
  ],
  "sourcesContent": [
    "<style>\n\t:global(body.dark-mode) {\n\t\tbackground-color: #0d1117;\n\t}\n\t:global(body.dark-mode) .title {\n\t\tcolor: white !important;\n\t}\n\t.search-input {\n\t\tbackground-color: transparent;\n\t}\n\t:global(body.dark-mode).search-input {\n\t\tcolor: white;\n\t}\n\t.search-input::placeholder {\n\t\tcolor: grey;\n\t}\n\n\t:global(::-webkit-scrollbar) {\n\t\twidth: 10px;\n\t}\n\n\t:global(::-webkit-scrollbar-thumb) {\n\t\tborder-radius: 20px;\n\t\tbackground-color: rgb(59, 59, 59);\n\t}\n\n\t:global(::-webkit-scrollbar-track) {\n\t\tbackground-color: rgb(30, 30, 30);\n\t}\n</style>\n\n<script>\n\n\timport { onMount } from 'svelte';\n\timport syntaxes from './Syntaxes.js';\n\n\timport Navbar from './components/Navbar.svelte';\n\timport Sidebar from './components/Sidebar.svelte';\n\timport Card from './components/Card.svelte';\n\timport TopArrow from './components/TopArrow.svelte';\n\timport Footer from './components/Footer.svelte';\n\n\tlet effects = [];\n\tlet conditions = [];\n\tlet expressions = [];\n\tlet events = [];\n\n\tasync function search() {\n\t\tconst cards = document.getElementsByClassName('syntaxes')[0].getElementsByClassName('card')\n\t\tconst search_value = document.getElementsByClassName('search-input')[0].value.toLowerCase();\n\t\tfor (let i = 0; i < cards.length; i++) {\n\t\t\tconst title = cards[i].getElementsByClassName('card-header-title')[0].textContent;\n\t\t\tconst pattern = cards[i].getElementsByClassName('card-pattern')[0];\n\t\t\tif (title.toLowerCase().indexOf(search_value) > -1) {\n\t\t\t\tcards[i].style.display = '';\n\t\t\t} else {\n\t\t\t\tcards[i].style.display = 'none';\n\t\t\t}\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tconst match = window.location.href.match(/(\\#.+)$/gm);\n\t\tif (match) {\n\t\t\tlet element = document.getElementById( match[0].replace(/^\\#/gm, '') );\n\t\t\tawait element.scrollIntoView();\n\t\t}\n\t})\n\n</script>\n\n<Navbar />\n\n<TopArrow />\n\n<div class=\"container top\">\n\t<div class=\"columns\">\n\t\t<div class=\"column is-2 is-hidden-mobile\">\n\t\t\t<Sidebar />\n\t\t</div>\n\t\t<div class=\"column is-10\">\n\t\t\t<div class=\"has-text-centered\">\n\t\t\t\t<input class=\"input has-text-centered search-input\" on:keypress={search} type=\"text\" placeholder=\"Find a syntax\">\n\t\t\t\t<br><br>\n\t\t\t</div>\n\t\t\t<div class=\"syntaxes top\">\n\n\t\t\t\t{#each Object.keys(syntaxes) as syntaxType}\n\t\t\t\t\t<div id=\"{syntaxType.toLowerCase()}\"><a href=\"#{syntaxType.toLowerCase()}\" class=\"title\">{syntaxType}</a></div><br>\n\t\t\t\t\t{#each syntaxes[syntaxType] as syntax}\n\t\t\t\t\t\t<Card type={syntaxType} {syntax} />\n\t\t\t\t\t{/each}\n\t\t\t\t\t<br>\n\t\t\t\t{/each}\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n\n<Footer />",
    "<style>\n\t:global(body.dark-mode) .navbar-menu, :global(body.dark-mode) .navbar-brand, :global(body.dark-mode) .navbar-dropdown {\n\t\tbackground-color: #161b22;\n\t}\n    :global(body.dark-mode) .navbar-item, :global(body.dark-mode) .navbar-link, :global(body.dark-mode) .navbar-burger {\n        color: white !important;\n    }\n    :global(body.dark-mode) .navbar-link.is-active, :global(body.dark-mode) .navbar-link:focus, :global(body.dark-mode) .navbar-link:focus-within, :global(body.dark-mode) .navbar-link:hover, :global(body.dark-mode) a.navbar-item.is-active, :global(body.dark-mode) a.navbar-item:focus, :global(body.dark-mode) a.navbar-item:focus-within, :global(body.dark-mode) a.navbar-item:hover {\n        background-color: #0d1117;\n    }\n    :global(body.dark-mode) .navbar-dropdown {\n        border-top: unset;\n    }\n    :global(body.dark-mode) .is-hoverable > a:hover {\n        background-color: #0d1117 !important;\n    }\n</style>\n\n<script>\n    let active = false;\n</script>\n\n<nav class=\"navbar\">\n    <div class=\"navbar-brand\">\n        <a class=\"navbar-burger\" href=\"#!\" on:click|preventDefault={() => active = !active}>\n            <span></span>\n            <span></span>\n            <span></span>\n        </a>\n    </div>\n    <div class=\"navbar-menu\" class:is-active={active}>\n        <div class=\"navbar-start\">\n            <a class=\"navbar-item\" href=\"#!\" onclick=\"toggleTheme();\">\n                <span><i class=\"fas fa-moon\"></i></span>\n            </a>\n            \n            <a class=\"navbar-item\" target=\"_blank\" href=\"https://github.com/iBlitzkriegi/Vixio/releases\">\n                <span><i class=\"fab fa-github\"></i></span> \n                <span style=\"margin-left: 5px;\">Releases</span>\n            </a>\n\n            <a class=\"navbar-item\" target=\"_blank\" href=\"https://discord.gg/kNHmqYH\"> \n                <span><i class=\"fab fa-discord\"></i></span>\n                <span style=\"margin-left: 5px;\">Discord</span>\n            </a>\n        </div>\n    </div>\n</nav>\n",
    "<style>\n\t:global(body.dark-mode) .menu-list a {\n\t\tcolor: white;\n\t}\n    :global(body.dark-mode) .menu-list a:hover {\n        background-color: #161b22 !important;\n    }\n</style>\n\n<aside class=\"menu\">\n    <p class=\"menu-label\">Search in</p>\n    <ul class=\"menu-list\">\n        <li><a href=\"#events\">Events</a></li>\n        <li><a href=\"#conditions\">Conditions</a></li>\n        <li><a href=\"#effects\">Effects</a></li>\n        <li><a href=\"#expressions\">Expressions</a></li>\n    </ul>\n</aside>",
    "<script>\n\n    import { onMount } from 'svelte';\n\n    let visible = false;\n\n    function scrollFunction() {\n        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n            visible = true;\n        } else {\n            visible = false;\n        }\n    }\n\n    async function backTop() {\n        document.body.scrollTop = 0;\n        document.documentElement.scrollTop = 0;\n    }\n    \n    onMount(async () => {\n        window.onscroll = scrollFunction;\n    })\n\n</script>\n\n<style>\n    .topButton {\n        position: fixed;\n        bottom: 20px;\n        right: 30px;\n        z-index: 99;\n        font-size: 18px;\n        border: none;\n        background-color: #4aabd9;\n        color: white;\n        cursor: pointer;\n        padding: 12px 15px 12px 15px;\n        border-radius: 4px;\n    }\n</style>\n\n{#if visible}\n    <button class=\"topButton\" on:click={backTop}><i class=\"fas fa-chevron-up\"></i></button>\n{/if}",
    "<style>\n\t:global(body.dark-mode) .card {\n\t\tbackground-color: #161b22;\n\t}\n    :global(body.dark-mode) .card-header-title, :global(body.dark-mode) .label, :global(body.dark-mode) .content {\n        color: white;\n    }\n</style>\n\n<script>\n\n    export let type;\n    export let syntax;\n\n    const id = syntax.name.toLowerCase().replace(/\\s/g, '_');\n\n    async function copyLink(elementId) {\n        window.location.href = window.location.href.replace(/#\\w+$/g, '') + `#${elementId}`;\n        const dummy = document.createElement('input'),\n              text = window.location.href;\n        document.body.appendChild(dummy);\n        dummy.value = text;\n        dummy.select();\n        document.execCommand('copy');\n        document.body.removeChild(dummy);\n    }\n\n</script>\n\n<div class=\"card top\" {id}>\n    <header class=\"card-header\">\n        <span class=\"tag is-large\" style=\"background-color: rgb(97, 237, 120)\">{type.toUpperCase()}</span>\n        <p class=\"card-header-title\">{syntax.name}</p>\n        <a aria-label=\"more options\" class=\"card-header-icon\" href=\"#!\" on:click|preventDefault={() => copyLink(id)}>\n            <span>Copy Link</span>\n            <span class=\"icon\"><i class=\"fas fa-hashtag\"></i></span>\n        </a>\n    </header>\n    <div class=\"card-content\">\n        <div class=\"content\">\n            <label class=\"label\">Description:</label>\n            <div class=\"content\">{syntax.description}</div>\n\n            <label class=\"label\">Patterns:</label>\n            <pre class=\"card-pattern\">\n                {@html \n                    syntax.patterns\n                        .join('<br>')\n                        .replace(/\\b(seen|from|of|in|reply with|append|set|add|remove)\\b/gmui, '<span style=\"color: rgb(69, 134, 239)\">$&</span>')\n                        .replace(/\\b(bot|guild|user|member|role|channel|permission|emote|embed)(builder)?s?\\b/gmui, '<span style=\"color: rgb(61, 226, 75)\">$&</span>')\n                }\n            </pre>\n\n            <label class=\"label\">Example:</label>\n            <pre class=\"card-example\">\n                {@html\n                    syntax.example\n                        .split(',')\n                        .join('<br>')\n                        .split('\\\\t')\n                        .join('&nbsp;')\n                        .replace(/\\t(prefixes|aliases|roles|description|usage|bots|executable in|trigger):/gmui, '<span style=\"color: rgb(244, 182, 66)\">$&</span>')\n                        .replace(/\\s\".+\"/gmui, '<span style=\"color: rgb(194, 66, 244)\">$&</span>')\n                        .replace(/(discord )?command/gmui, '<span style=\"color: rgb(244, 182, 66)\">$&</span>')\n                        .replace(/\\{@.+\\}/gmui, '<span style=\"color: rgb(224, 38, 38)\">$&</span>')\n                        .replace(/\\b(seen|from|in|reply with|append|set|add|remove|if|is|make)(?!:)\\b/gmui, '<span style=\"color: rgb(69, 134, 239)\">$&</span>')\n                }\n            </pre>\n        </div>\n    </div>\n</div>",
    "<style>\n\t:global(body.dark-mode) .footer {\n\t\tbackground-color: #161b22;\n        padding: 2rem 1.5rem 2rem;\n\t}\n    :global(body.dark-mode) .content {\n        color: white;\n    }\n</style>\n\n<footer class=\"footer\">\n    <div class=\"content has-text-centered\">\n       <p>Made with ❤️ (by <a href=\"https://github.com/Olyno\">Olyno</a>)</p>\n    </div>\n</footer>"
  ],
  "names": [],
  "mappings": "AACS,cAAc,AAAE,CAAC,AACxB,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACO,cAAc,AAAC,CAAC,MAAM,eAAC,CAAC,AAC/B,KAAK,CAAE,KAAK,CAAC,UAAU,AACxB,CAAC,AACD,aAAa,eAAC,CAAC,AACd,gBAAgB,CAAE,WAAW,AAC9B,CAAC,AACO,cAAc,AAAC,aAAa,eAAC,CAAC,AACrC,KAAK,CAAE,KAAK,AACb,CAAC,AACD,4BAAa,aAAa,AAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,AACZ,CAAC,AAEO,mBAAmB,AAAE,CAAC,AAC7B,KAAK,CAAE,IAAI,AACZ,CAAC,AAEO,yBAAyB,AAAE,CAAC,AACnC,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AAClC,CAAC,AAEO,yBAAyB,AAAE,CAAC,AACnC,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AAClC,CAAC;AC3BO,cAAc,AAAC,CAAC,0BAAY,CAAU,cAAc,AAAC,CAAC,aAAa,cAA2C,CAAC,AACtH,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACU,cAAc,AAAC,CAAC,0BAAY,CAAgD,cAAc,AAAC,CAAC,cAAc,cAAC,CAAC,AAChH,KAAK,CAAE,KAAK,CAAC,UAAU,AAC3B,CAAC,AACmP,cAAc,AAAC,CAAC,CAAC,0BAAY,MAAM,CAAU,cAAc,AAAC,CAAC,CAAC,0BAAY,aAAa,CAAU,cAAc,AAAC,CAAC,CAAC,0BAAY,MAAM,AAAC,CAAC,AACtX,gBAAgB,CAAE,OAAO,AAC7B,CAAC;ACRI,cAAc,AAAC,CAAC,yBAAU,CAAC,CAAC,eAAC,CAAC,AACrC,KAAK,CAAE,KAAK,AACb,CAAC,AACU,cAAc,AAAC,CAAC,yBAAU,CAAC,gBAAC,MAAM,AAAC,CAAC,AACxC,gBAAgB,CAAE,OAAO,CAAC,UAAU,AACxC,CAAC;ACoBD,UAAU,cAAC,CAAC,AACR,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,EAAE,CACX,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,aAAa,CAAE,GAAG,AACtB,CAAC;ACrCI,cAAc,AAAC,CAAC,KAAK,eAAC,CAAC,AAC9B,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACU,cAAc,AAAC,CAAC,iCAAkB,CAAU,cAAc,AAAC,CAAC,qBAAM,CAAU,cAAc,AAAC,CAAC,QAAQ,eAAC,CAAC,AAC1G,KAAK,CAAE,KAAK,AAChB,CAAC;ACLI,cAAc,AAAC,CAAC,OAAO,cAAC,CAAC,AAChC,gBAAgB,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,AAChC,CAAC,AACU,cAAc,AAAC,CAAC,QAAQ,cAAC,CAAC,AAC9B,KAAK,CAAE,KAAK,AAChB,CAAC"
}